pipeline {
    agent any

    environment {
        DOCKER_IMAGE = 'my-app'
        DOCKER_TAG = 'latest'
        K8S_NAMESPACE = 'my-namespace'
        K8S_DEPLOYMENT_NAME = 'my-app-deployment'
        K8S_SERVICE_NAME = 'my-app-service'
        K8S_INGRESS_NAME = 'my-app-ingress'
    }

    stages {
        stage('Build Docker image') {
            steps {
                sh 'docker build -t $DOCKER_IMAGE:$DOCKER_TAG docker/app'
            }
        }

        stage('Push Docker image') {
            steps {
                sh 'docker push $DOCKER_IMAGE:$DOCKER_TAG'
            }
        }

        stage('Deploy to Kubernetes') {
            steps {
                withCredentials([kubeconfigFile(credentialsId: 'kubeconfig', variable: 'KUBECONFIG')]) {
                    sh 'kubectl apply -f kubernetes/configs/app-config.yml --namespace $K8S_NAMESPACE'
                    sh 'kubectl set image deployment/$K8S_DEPLOYMENT_NAME $K8S_DEPLOYMENT_NAME=$DOCKER_IMAGE:$DOCKER_TAG --namespace $K8S_NAMESPACE'
                    sh 'kubectl apply -f kubernetes/deployments/app-deployment.yml --namespace $K8S_NAMESPACE'
                    sh 'kubectl apply -f kubernetes/services/app-service.yml --namespace $K8S_NAMESPACE'
                    sh 'kubectl apply -f kubernetes/ingress/app-ingress.yml --namespace $K8S_NAMESPACE'
                }
            }
        }
    }
}

